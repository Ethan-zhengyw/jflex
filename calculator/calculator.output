语法

    0 $accept: statement $end

    1 statement: %empty
    2          | statement exp EOL
    3          | statement error EOL

    4 exp: exp_math
    5    | exp_bool

    6 exp_math: NUMBER
    7         | SUB NUMBER
    8         | exp_bool QUEST exp_math COLON exp_math
    9         | exp_math ADD exp_math
   10         | exp_math SUB exp_math
   11         | exp_math MUL exp_math
   12         | exp_math DIV exp_math
   13         | BRACKET_L exp_math BRACKET_R

   14 exp_bool: TRUE
   15         | FALSE
   16         | exp_bool QUEST exp_bool COLON exp_bool
   17         | exp_bool AND exp_bool
   18         | exp_bool OR exp_bool
   19         | exp_bool XOR exp_bool
   20         | exp_math LE exp_math
   21         | exp_math GE exp_math
   22         | exp_math EQ exp_math
   23         | exp_bool EQ exp_bool
   24         | exp_math NE exp_math
   25         | exp_bool NE exp_bool
   26         | exp_math LT exp_math
   27         | exp_math GT exp_math
   28         | NOT exp_bool
   29         | BRACKET_L exp_bool BRACKET_R


Terminals, with rules where they appear

$end (0) 0
error (256) 3
QUEST (258) 8 16
COLON (259) 8 16
AND (260) 17
OR (261) 18
XOR (262) 19
LE (263) 20
GE (264) 21
EQ (265) 22 23
NE (266) 24 25
LT (267) 26
GT (268) 27
ADD (269) 9
SUB (270) 7 10
MUL (271) 11
DIV (272) 12
NOT (273) 28
BRACKET_L (274) 13 29
BRACKET_R (275) 13 29
TRUE (276) 14
FALSE (277) 15
NUMBER (278) 6 7
EOL (279) 2 3


Nonterminals, with rules where they appear

$accept (25)
    左： 0
statement (26)
    左： 1 2 3, 右： 0 2 3
exp (27)
    左： 4 5, 右： 2
exp_math (28)
    左： 6 7 8 9 10 11 12 13, 右： 4 8 9 10 11 12 13 20 21 22 24
    26 27
exp_bool (29)
    左： 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, 右：
    5 8 16 17 18 19 23 25 28 29


State 0

    0 $accept: . statement $end

    $default  reduce using rule 1 (statement)

    statement  转到状态 1


State 1

    0 $accept: statement . $end
    2 statement: statement . exp EOL
    3          | statement . error EOL

    $end       shift, and go to state 2
    error      shift, and go to state 3
    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp       转到状态 10
    exp_math  转到状态 11
    exp_bool  转到状态 12


State 2

    0 $accept: statement $end .

    $default  接受


State 3

    3 statement: statement error . EOL

    EOL  shift, and go to state 13


State 4

    7 exp_math: SUB . NUMBER

    NUMBER  shift, and go to state 14


State 5

   28 exp_bool: NOT . exp_bool

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 15
    exp_bool  转到状态 16


State 6

   13 exp_math: BRACKET_L . exp_math BRACKET_R
   29 exp_bool: BRACKET_L . exp_bool BRACKET_R

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 17
    exp_bool  转到状态 18


State 7

   14 exp_bool: TRUE .

    $default  reduce using rule 14 (exp_bool)


State 8

   15 exp_bool: FALSE .

    $default  reduce using rule 15 (exp_bool)


State 9

    6 exp_math: NUMBER .

    $default  reduce using rule 6 (exp_math)


State 10

    2 statement: statement exp . EOL

    EOL  shift, and go to state 19


State 11

    4 exp: exp_math .
    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    LE   shift, and go to state 20
    GE   shift, and go to state 21
    EQ   shift, and go to state 22
    NE   shift, and go to state 23
    LT   shift, and go to state 24
    GT   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 4 (exp)


State 12

    5 exp: exp_bool .
    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool

    QUEST  shift, and go to state 30
    AND    shift, and go to state 31
    OR     shift, and go to state 32
    XOR    shift, and go to state 33
    EQ     shift, and go to state 34
    NE     shift, and go to state 35

    $default  reduce using rule 5 (exp)


State 13

    3 statement: statement error EOL .

    $default  reduce using rule 3 (statement)


State 14

    7 exp_math: SUB NUMBER .

    $default  reduce using rule 7 (exp_math)


State 15

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    LE   shift, and go to state 20
    GE   shift, and go to state 21
    EQ   shift, and go to state 22
    NE   shift, and go to state 23
    LT   shift, and go to state 24
    GT   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29


State 16

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool
   28         | NOT exp_bool .

    $default  reduce using rule 28 (exp_bool)


State 17

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   13         | BRACKET_L exp_math . BRACKET_R
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    LE         shift, and go to state 20
    GE         shift, and go to state 21
    EQ         shift, and go to state 22
    NE         shift, and go to state 23
    LT         shift, and go to state 24
    GT         shift, and go to state 25
    ADD        shift, and go to state 26
    SUB        shift, and go to state 27
    MUL        shift, and go to state 28
    DIV        shift, and go to state 29
    BRACKET_R  shift, and go to state 36


State 18

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool
   29         | BRACKET_L exp_bool . BRACKET_R

    QUEST      shift, and go to state 30
    AND        shift, and go to state 31
    OR         shift, and go to state 32
    XOR        shift, and go to state 33
    EQ         shift, and go to state 34
    NE         shift, and go to state 35
    BRACKET_R  shift, and go to state 37


State 19

    2 statement: statement exp EOL .

    $default  reduce using rule 2 (statement)


State 20

   20 exp_bool: exp_math LE . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 38
    exp_bool  转到状态 39


State 21

   21 exp_bool: exp_math GE . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 40
    exp_bool  转到状态 39


State 22

   22 exp_bool: exp_math EQ . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 41
    exp_bool  转到状态 39


State 23

   24 exp_bool: exp_math NE . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 42
    exp_bool  转到状态 39


State 24

   26 exp_bool: exp_math LT . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 43
    exp_bool  转到状态 39


State 25

   27 exp_bool: exp_math GT . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 44
    exp_bool  转到状态 39


State 26

    9 exp_math: exp_math ADD . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 45
    exp_bool  转到状态 39


State 27

   10 exp_math: exp_math SUB . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 46
    exp_bool  转到状态 39


State 28

   11 exp_math: exp_math MUL . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 47
    exp_bool  转到状态 39


State 29

   12 exp_math: exp_math DIV . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 48
    exp_bool  转到状态 39


State 30

    8 exp_math: exp_bool QUEST . exp_math COLON exp_math
   16 exp_bool: exp_bool QUEST . exp_bool COLON exp_bool

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 49
    exp_bool  转到状态 50


State 31

   17 exp_bool: exp_bool AND . exp_bool

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 15
    exp_bool  转到状态 51


State 32

   18 exp_bool: exp_bool OR . exp_bool

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 15
    exp_bool  转到状态 52


State 33

   19 exp_bool: exp_bool XOR . exp_bool

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 15
    exp_bool  转到状态 53


State 34

   23 exp_bool: exp_bool EQ . exp_bool

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 15
    exp_bool  转到状态 54


State 35

   25 exp_bool: exp_bool NE . exp_bool

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 15
    exp_bool  转到状态 55


State 36

   13 exp_math: BRACKET_L exp_math BRACKET_R .

    $default  reduce using rule 13 (exp_math)


State 37

   29 exp_bool: BRACKET_L exp_bool BRACKET_R .

    $default  reduce using rule 29 (exp_bool)


State 38

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   20         | exp_math LE exp_math .
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    LE   shift, and go to state 20
    GE   shift, and go to state 21
    LT   shift, and go to state 24
    GT   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 20 (exp_bool)


State 39

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool

    QUEST  shift, and go to state 30
    AND    shift, and go to state 31
    OR     shift, and go to state 32
    XOR    shift, and go to state 33
    EQ     shift, and go to state 34
    NE     shift, and go to state 35


State 40

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   21         | exp_math GE exp_math .
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    LE   shift, and go to state 20
    GE   shift, and go to state 21
    LT   shift, and go to state 24
    GT   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 21 (exp_bool)


State 41

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   22         | exp_math EQ exp_math .
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    LE   shift, and go to state 20
    GE   shift, and go to state 21
    LT   shift, and go to state 24
    GT   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 22 (exp_bool)


State 42

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   24         | exp_math NE exp_math .
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    LE   shift, and go to state 20
    GE   shift, and go to state 21
    LT   shift, and go to state 24
    GT   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 24 (exp_bool)


State 43

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   26         | exp_math LT exp_math .
   27         | exp_math . GT exp_math

    LE   shift, and go to state 20
    GE   shift, and go to state 21
    LT   shift, and go to state 24
    GT   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 26 (exp_bool)


State 44

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math
   27         | exp_math GT exp_math .

    LE   shift, and go to state 20
    GE   shift, and go to state 21
    LT   shift, and go to state 24
    GT   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 27 (exp_bool)


State 45

    9 exp_math: exp_math . ADD exp_math
    9         | exp_math ADD exp_math .
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 9 (exp_math)


State 46

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   10         | exp_math SUB exp_math .
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 10 (exp_math)


State 47

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   11         | exp_math MUL exp_math .
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    $default  reduce using rule 11 (exp_math)


State 48

    9 exp_math: exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   12         | exp_math DIV exp_math .
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    $default  reduce using rule 12 (exp_math)


State 49

    8 exp_math: exp_bool QUEST exp_math . COLON exp_math
    9         | exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    COLON  shift, and go to state 56
    LE     shift, and go to state 20
    GE     shift, and go to state 21
    EQ     shift, and go to state 22
    NE     shift, and go to state 23
    LT     shift, and go to state 24
    GT     shift, and go to state 25
    ADD    shift, and go to state 26
    SUB    shift, and go to state 27
    MUL    shift, and go to state 28
    DIV    shift, and go to state 29


State 50

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   16         | exp_bool QUEST exp_bool . COLON exp_bool
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool

    QUEST  shift, and go to state 30
    COLON  shift, and go to state 57
    AND    shift, and go to state 31
    OR     shift, and go to state 32
    XOR    shift, and go to state 33
    EQ     shift, and go to state 34
    NE     shift, and go to state 35


State 51

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   17         | exp_bool . AND exp_bool
   17         | exp_bool AND exp_bool .
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool

    EQ  shift, and go to state 34
    NE  shift, and go to state 35

    $default  reduce using rule 17 (exp_bool)


State 52

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   18         | exp_bool OR exp_bool .
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool

    EQ  shift, and go to state 34
    NE  shift, and go to state 35

    $default  reduce using rule 18 (exp_bool)


State 53

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   19         | exp_bool XOR exp_bool .
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool

    EQ  shift, and go to state 34
    NE  shift, and go to state 35

    $default  reduce using rule 19 (exp_bool)


State 54

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   23         | exp_bool EQ exp_bool .
   25         | exp_bool . NE exp_bool

    $default  reduce using rule 23 (exp_bool)


State 55

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool
   25         | exp_bool NE exp_bool .

    $default  reduce using rule 25 (exp_bool)


State 56

    8 exp_math: exp_bool QUEST exp_math COLON . exp_math

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 58
    exp_bool  转到状态 39


State 57

   16 exp_bool: exp_bool QUEST exp_bool COLON . exp_bool

    SUB        shift, and go to state 4
    NOT        shift, and go to state 5
    BRACKET_L  shift, and go to state 6
    TRUE       shift, and go to state 7
    FALSE      shift, and go to state 8
    NUMBER     shift, and go to state 9

    exp_math  转到状态 15
    exp_bool  转到状态 59


State 58

    8 exp_math: exp_bool QUEST exp_math COLON exp_math .
    9         | exp_math . ADD exp_math
   10         | exp_math . SUB exp_math
   11         | exp_math . MUL exp_math
   12         | exp_math . DIV exp_math
   20 exp_bool: exp_math . LE exp_math
   21         | exp_math . GE exp_math
   22         | exp_math . EQ exp_math
   24         | exp_math . NE exp_math
   26         | exp_math . LT exp_math
   27         | exp_math . GT exp_math

    LE   shift, and go to state 20
    GE   shift, and go to state 21
    EQ   shift, and go to state 22
    NE   shift, and go to state 23
    LT   shift, and go to state 24
    GT   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    MUL  shift, and go to state 28
    DIV  shift, and go to state 29

    $default  reduce using rule 8 (exp_math)


State 59

    8 exp_math: exp_bool . QUEST exp_math COLON exp_math
   16 exp_bool: exp_bool . QUEST exp_bool COLON exp_bool
   16         | exp_bool QUEST exp_bool COLON exp_bool .
   17         | exp_bool . AND exp_bool
   18         | exp_bool . OR exp_bool
   19         | exp_bool . XOR exp_bool
   23         | exp_bool . EQ exp_bool
   25         | exp_bool . NE exp_bool

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    XOR  shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35

    $default  reduce using rule 16 (exp_bool)
